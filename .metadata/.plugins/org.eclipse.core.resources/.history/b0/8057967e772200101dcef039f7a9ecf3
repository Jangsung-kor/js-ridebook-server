package com.jangsung.js_ridebook.controller;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.jangsung.js_ridebook.dto.CycleLogDto;
import com.jangsung.js_ridebook.service.CycleLogService;

@RestController @RequestMapping("/api/cycle-log")
public class CycleLogController
{
    private final CycleLogService cycleLogService;

    public CycleLogController(CycleLogService cycleLogService) {
        this.cycleLogService = cycleLogService;
    }

    /**
     * 자전거 로그 목록 조회
     * 
     * @return
     */
    @GetMapping
    public List<CycleLogDto> getCycleLogs()
    {
        return cycleLogService.getCycleLogs();
    }

    /**
     * 자전거 로그 상세 정보 조회
     * 
     * @param id
     * @return
     */
    @GetMapping("/{id}")
    public CycleLogDto getLogDetailById(@PathVariable Long id)
    {
        return cycleLogService.getLogDetailById(id);
    }

    /**
     * 자전거 로그 추가
     * 
     * @param dto
     */
    @PostMapping
    public void createLog(@RequestBody CycleLogDto dto)
    {
        cycleLogService.insert(dto);
    }

    /**
     * 자전거 로그 수정
     * 
     * @param dto
     */
    @PutMapping
    public void updateLog(@RequestBody CycleLogDto dto)
    {
        cycleLogService.update(dto);
    }

    /**
     * 자전거 로그 삭제
     * 
     * @param id
     */
    @DeleteMapping("/{id}")
    public void deleteLog(@PathVariable Long id)
    {
        cycleLogService.delete(id);
    }
}
